[tool.poetry]
name = "olciamcp"
version = "0.1.0"
description = "MCP+RAG Scaffolding with ChromaDB integration"
authors = ["Hipson47 <m.mortka47@icloud.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11"
chromadb = "^0.4.0"
mcp = "^1.0.0"
python-dotenv = "^1.0.0"
sentence-transformers = "^2.2.0"
numpy = "^1.24.0"
requests = "^2.28.0"
PyMuPDF = "^1.23.0"
ruamel-yaml = "^0.18.0"
tiktoken = "^0.5.0"
watchdog = "^3.0.0"
pypdf = "^4.0.0"
typer = "^0.9.0"
pydantic = "^2.0.0"
openai = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-timeout = "^2.1.0"
ruff = "^0.1.0"
mypy = "^1.5.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = ["rag/store", "knowledge", ".git", "__pycache__", "*.pyc"]
lint.select = ["E", "F", "I", "UP", "B"]
lint.ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["E402", "F401", "F841", "I001", "UP015", "B904", "B007", "S101"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    "sentence_transformers.*",
    "tiktoken.*",
    "fitz.*",
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
